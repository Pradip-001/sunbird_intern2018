angular.module("playerApp").component("geo",{require:{parent:"^parent"},controller:["$scope","$rootScope","$injector",function(e,t,i){var o=this;this.keyName="geo",this.items=void 0,this.receipients=[];var n={key:"geo",value:{}};this.$onInit=function(){var e=this,i=e.getConfig();e.receipients=t.receipients,_.has(i,e.keyName)&&e.initialize(i),t.$on("component:update",e.updateItems)},this.initialize=function(e){t.$on("items:from:child",function(){n.value=o.getSelectedItems(),o.parent.setItem(n)}),e[this.keyName].adopter?this.validateAdopter(e[this.keyName]):console.error("Adopter is required")},this.updateItems=function(e,n){var r=o.getConfig(),s=i.get(r[o.keyName].service),a={id:t.rootOrgId};s.getItems(a).then(function(e){if(e&&"OK"===e.responseCode){var t=e.result.response;_.forEach(t,function(e){-1!==n.indexOf(e.id)&&(e.selected=!0)}),o.renderItems(t)}else console.error("Locations are not found")}).catch(function(e){console.error("Unable to fetch the locations",e)})},this.getConfig=function(){if(this.parent)return this.parent.config;console.error("Parent component is need to initialize.")},this.renderItems=function(e){this.items=e},this.getSelectedItems=function(){return _.filter(o.items,["selected",!0])},this.validateAdopter=function(e){switch(e.adopter.toUpperCase()){case"JSON":this.initializeJsonAdopter(e);break;case"SERVICE":this.initializeServiceAdopter(e);break;default:console.error("Invalid Adopter, Current supported adopters are only JSON and SERVICE.")}},this.initializeJsonAdopter=function(e){this.renderItems(e.json)},this.initializeServiceAdopter=function(e){var o=this,n=i.get(e.service),r={id:t.rootOrgId};n.getItems(r).then(function(e){e&&"OK"===e.responseCode?o.renderItems(e.result.response):console.error("Locations are not found")}).catch(function(e){console.error("Unable to fetch the locations",e)})}}],templateUrl:"views/components/geo.html"});